D bv32 v000
	0 Declare: r_vars[v000] = (32, 0b0)
D bv32 v001
	1 Declare: r_vars[v001] = (32, 0b0)
D bv64 v002
	2 Declare: r_vars[v002] = (64, 0b0)
D bv64 v003
	3 Declare: r_vars[v003] = (64, 0b0)
D bv64 v004
	4 Declare: r_vars[v004] = (64, 0b0)
D bv32 v005
	5 Declare: r_vars[v005] = (32, 0b0)
D bv64 v006
	6 Declare: r_vars[v006] = (64, 0b0)
D bv64 v007
	7 Declare: r_vars[v007] = (64, 0b0)
D bv8 v008
	8 Declare: r_vars[v008] = (8, 0b0)
D bv32 v009
	9 Declare: r_vars[v009] = (32, 0b0)
O v006
	 output count: 1 	0000000000000000000000000000000000000000000000000000000000000000
A v002 ( ( ! ( v008 ) ) - ( ( 01110101 ) | ( v009 ) ) )
	11 Assign: r_vars[v002] = (64, 0000000000000000000000000000000000000000000000000000000010001010)
A v002 ( ( ( 1101111000101110011001111110010110000001101101111111011010011101 ) & ( 1100101100000010110100100110110100000110100111010110001110011011 ) ) | ( ( 11011010010100100100100010011110 ) | ( v004 ) ) )
	12 Assign: r_vars[v002] = (64, 1100101000000010010000100110010111011010110101110110101010011111)
O v006
	 output count: 2 	0000000000000000000000000000000000000000000000000000000000000000
O v003
	 output count: 3 	0000000000000000000000000000000000000000000000000000000000000000
O v003
	 output count: 4 	0000000000000000000000000000000000000000000000000000000000000000
O v008
	 output count: 5 	00000000
A v008 ( ( ( v001 ) | ( v007 ) ) - ( ! ( 11001010011111110101101111100110 ) ) )
	17 Assign: r_vars[v008] = (8, 11100111)
O v008
	 output count: 6 	11100111
A v004 ( ( ( v004 ) + ( v005 ) ) + ( ( v008 ) + ( 11010111 ) ) )
	19 Assign: r_vars[v004] = (64, 0000000000000000000000000000000000000000000000000000000010111110)
O v009
	 output count: 7 	00000000000000000000000000000000
A v005 ( ( ( 00000011110100001111111010000000 ) - ( 1001001101110001 ) ) + ( ( v007 ) - ( 1111101001110100 ) ) )
	21 Assign: r_vars[v005] = (32, 00000011110011110111000010011011)
A v007 ( ( ( 1001101001010101011100100011010011110001000111000001010100000111 ) + ( 1001110000010001 ) ) & ( ( v006 ) - ( v005 ) ) )
	22 Assign: r_vars[v007] = (64, 1001101001010101011100100011010011110000000100001000000100000000)
A v000 ( ( ( 11111001100111010101011100000110 ) - ( v009 ) ) & ( ( 1011100010000100110101000011111001110001001101001011011011001100 ) - ( v003 ) ) )
	23 Assign: r_vars[v000] = (32, 01110001000101000001011000000100)
O v001
	 output count: 8 	00000000000000000000000000000000
A v005 ( ( ( v006 ) & ( 0011011101111101 ) ) | ( ( 10010000000100101001011101101001 ) - ( v007 ) ) )
	25 Assign: r_vars[v005] = (32, 10100000000000100001011001101001)
O v009
	 output count: 9 	00000000000000000000000000000000
A v000 ( ( ( 0010101111001111 ) & ( 0101111001011100 ) ) & ( ! ( 1101000000111101 ) ) )
	27 Assign: r_vars[v000] = (32, 00000000000000000000101001000000)
A v002 ( ( ( 0100000000101001001001001010000111101011000010110001111111111100 ) + ( v000 ) ) + ( ! ( v001 ) ) )
	28 Assign: r_vars[v002] = (64, 0100000000101001001001001010001011101011000010110010101000111011)
A v005 ( ( ( v009 ) - ( v008 ) ) - ( ! ( 0001111010001001000101011100110011111100011101011111100110000111 ) ) )
	29 Assign: r_vars[v005] = (32, 11111100011101011111100010100001)
O v007
	 output count: 10 	1001101001010101011100100011010011110000000100001000000100000000
O v006
	 output count: 11 	0000000000000000000000000000000000000000000000000000000000000000
A v005 ( ( ( 0111111100100011001010010100010011110111100101111001101001010001 ) | ( v005 ) ) - ( ! ( v003 ) ) )
	32 Assign: r_vars[v005] = (32, 11111111111101111111101011110010)
A v006 ( ( ( 01001101 ) - ( 1010010010010011111001001101001011101110110000110011101010110101 ) ) + ( ( v001 ) + ( v007 ) ) )
	33 Assign: r_vars[v006] = (64, 1111010111000001100011010110001000000001010011010100011010011000)
A v001 ( ( ! ( v001 ) ) | ( ( v002 ) - ( v009 ) ) )
	34 Assign: r_vars[v001] = (32, 11111111111111111111111111111111)
A v007 ( ! ( ( v005 ) & ( v009 ) ) )
	35 Assign: r_vars[v007] = (64, 0000000000000000000000000000000011111111111111111111111111111111)
A v007 ( ( ! ( 1110111101010000011011111000100101010010110001101100110000001110 ) ) - ( ( 1111111100110100 ) - ( v005 ) ) )
	36 Assign: r_vars[v007] = (64, 0001000010101111100100000111011010101101001100000010111110101111)
A v002 ( ( ( v002 ) & ( 1101010111000000 ) ) | ( ( v005 ) - ( 00010111100100100010101100111010 ) ) )
	37 Assign: r_vars[v002] = (64, 0000000000000000000000000000000011101000011001011100111110111000)
A v004 ( ( ( 0010011101111101011101110011000101001111110011111010011010001001 ) & ( v008 ) ) | ( ( 01111100 ) + ( v006 ) ) )
	38 Assign: r_vars[v004] = (64, 1111010111000001100011010110001000000001010011010100011110010101)
O v002
	 output count: 12 	0000000000000000000000000000000011101000011001011100111110111000
A v005 ( ( ( 1010100000111011100100110110001010010100101100000000000010010110 ) | ( v002 ) ) + ( ( 00000011 ) + ( 11111011 ) ) )
	40 Assign: r_vars[v005] = (32, 11111100111101011101000010111100)
A v000 ( ( ( v001 ) & ( v001 ) ) + ( ( 01000010001010111000111001100011 ) + ( v006 ) ) )
	41 Assign: r_vars[v000] = (32, 01000011011110001101010011111010)
A v005 ( ( ( 01100001001110011011111111101110 ) | ( v008 ) ) | ( ( 1100011101011010 ) & ( 00001000001010100011011010000100 ) ) )
	42 Assign: r_vars[v005] = (32, 01100001001110011011111111101111)
O v004
	 output count: 13 	1111010111000001100011010110001000000001010011010100011110010101
A v003 ( ( ( 10010000 ) & ( 0111100000010101 ) ) | ( ! ( v002 ) ) )
	44 Assign: r_vars[v003] = (64, 1111111111111111111111111111111100010111100110100011000001010111)
O v001
	 output count: 14 	11111111111111111111111111111111
O v000
	 output count: 15 	01000011011110001101010011111010
A v001 ( ( ! ( 0111010001001001101111011101010100010111111001100100110111000000 ) ) | ( ( 01010010010111100110110010000101 ) & ( v002 ) ) )
	47 Assign: r_vars[v001] = (32, 11101000010111011111111010111111)
A v000 ( ( ( v005 ) - ( v003 ) ) + ( ( 1101000001000110 ) & ( 0100111111010001 ) ) )
	48 Assign: r_vars[v000] = (32, 01001001100111111100111111011000)
A v009 ( ! ( ( 00110110 ) - ( v002 ) ) )
	49 Assign: r_vars[v009] = (32, 11101000011001011100111110000001)
A v004 ( ( ( v007 ) - ( 10111000100000001100010100100011 ) ) + ( ! ( 0011010011001011 ) ) )
	50 Assign: r_vars[v004] = (64, 0001000010101111100100000111010111110100101100000011010111000000)
A v001 ( ( ( v009 ) & ( v005 ) ) + ( ! ( 1000110011100000 ) ) )
	51 Assign: r_vars[v001] = (32, 01100000001000100000001010100000)
A v005 ( ( ( 00001110010100000100110001010000 ) + ( v008 ) ) - ( ! ( 0001011011110111010100000001111101000110100101001111000100110100 ) ) )
	52 Assign: r_vars[v005] = (32, 01010100111001010011111001101100)
O v005
	 output count: 16 	01010100111001010011111001101100
A v006 ( ! ( ( v005 ) & ( 11110011100000010101101011000100 ) ) )
	54 Assign: r_vars[v006] = (64, 0000000000000000000000000000000010101111011111101110010110111011)
O v008
	 output count: 17 	11100111
A v007 ( ( ( v009 ) | ( 1101011101000000 ) ) + ( ( 11111110 ) - ( v008 ) ) )
	56 Assign: r_vars[v007] = (64, 0000000000000000000000000000000011101000011001011101111111011000)
O v004
	 output count: 18 	0001000010101111100100000111010111110100101100000011010111000000
A v008 ( ( ( 0000101110000110 ) + ( 00110100111011101010111110011100 ) ) | ( ( v005 ) + ( 11111000 ) ) )
	58 Assign: r_vars[v008] = (8, 01100110)
A v007 ( ( ! ( v005 ) ) & ( ( 11000010010001100101010011101100 ) | ( v000 ) ) )
	59 Assign: r_vars[v007] = (64, 0000000000000000000000000000000010001011000110101100000110010000)
A v005 ( ( ( 10110011 ) - ( v004 ) ) - ( ( v004 ) | ( v009 ) ) )
	60 Assign: r_vars[v005] = (32, 00001110010110011100101100110010)
A v003 ( ( ! ( 00100101 ) ) & ( ! ( v009 ) ) )
	61 Assign: r_vars[v003] = (64, 0000000000000000000000000000000000000000000000000000000001011010)
O v007
	 output count: 19 	0000000000000000000000000000000010001011000110101100000110010000
A v005 ( ( ( v003 ) & ( v001 ) ) + ( ( v004 ) | ( 10110001110100100101110011001101 ) ) )
	63 Assign: r_vars[v005] = (32, 11110101111100100111110111001101)
A v003 ( ! ( ! ( v003 ) ) )
	64 Assign: r_vars[v003] = (64, 0000000000000000000000000000000000000000000000000000000001011010)
O v006
	 output count: 20 	0000000000000000000000000000000010101111011111101110010110111011
O v003
	 output count: 21 	0000000000000000000000000000000000000000000000000000000001011010
A v001 ( ( ! ( 0110101001110110 ) ) & ( ( 1000101010110100 ) & ( 01101100 ) ) )
	67 Assign: r_vars[v001] = (32, 00000000000000000000000000000000)
A v005 ( ( ! ( v005 ) ) & ( ( 01110110101001000101111000100110 ) - ( v000 ) ) )
	68 Assign: r_vars[v005] = (32, 00001000000001001000001000000010)
A v000 ( ( ( v007 ) & ( 0001011011101110101011011111001000101010100000111110110001101111 ) ) - ( ( 0011001110000111 ) - ( 01101111101111011100011010011101 ) ) )
	69 Assign: r_vars[v000] = (32, 01111001110000000101001100010110)
A v009 ( ( ( v007 ) & ( 1101111000001010010100101001000101011001100100101010110111000011 ) ) - ( ( 0110000111110100 ) - ( v008 ) ) )
	70 Assign: r_vars[v009] = (32, 00001001000100100001111111110010)
A v009 ( ! ( ( v007 ) & ( v001 ) ) )
	71 Assign: r_vars[v009] = (32, 11111111111111111111111111111111)
A v000 ( ( ( v006 ) + ( 0010100010011111 ) ) - ( ( v000 ) - ( 11000000110011100000011100011111 ) ) )
	72 Assign: r_vars[v000] = (32, 11110110100011001100001001100011)
A v002 ( ( ( v001 ) + ( 0111000010110111110111100100010010010110111111010100101000011100 ) ) & ( ( v000 ) | ( v002 ) ) )
	73 Assign: r_vars[v002] = (64, 0000000000000000000000000000000010010110111011010100101000011000)
A v004 ( ( ! ( v006 ) ) & ( ! ( v002 ) ) )
	74 Assign: r_vars[v004] = (64, 1111111111111111111111111111111101000000000000000001000001000100)
O v009
	 output count: 22 	11111111111111111111111111111111
O v004
	 output count: 23 	1111111111111111111111111111111101000000000000000001000001000100
A v006 ( ( ( 0000111100011110 ) + ( 00001110 ) ) & ( ( 00001000111011011110101110111011 ) | ( v002 ) ) )
	77 Assign: r_vars[v006] = (64, 0000000000000000000000000000000000000000000000000000101100101000)
O v008
	 output count: 24 	01100110
O v007
	 output count: 25 	0000000000000000000000000000000010001011000110101100000110010000
A v006 ( ( ( v006 ) - ( 01101111001100100011100011001110 ) ) - ( ( v001 ) - ( v003 ) ) )
	80 Assign: r_vars[v006] = (64, 1111111111111111111111111111111110010000110011011101001010110100)
O v002
	 output count: 26 	0000000000000000000000000000000010010110111011010100101000011000
A v003 ( ( ( 10111101 ) & ( v006 ) ) & ( ( v000 ) & ( 10110101 ) ) )
	82 Assign: r_vars[v003] = (64, 0000000000000000000000000000000000000000000000000000000000100000)
A v000 ( ( ( v003 ) - ( 1001001100000100 ) ) | ( ( 1100111001011011 ) - ( 1011100110010011000111000010010111011100111100001011000111111100 ) ) )
	83 Assign: r_vars[v000] = (32, 11111111111111110111110101011111)
A v008 ( ( ( 0110111100010011110101100000110010000110001111010101110111111111 ) & ( 0100110000100001100110011100011100010000011111011100011101010010 ) ) - ( ( 1011100111000001101100011000100000100100001000111011010001000100 ) - ( v008 ) ) )
	84 Assign: r_vars[v008] = (8, 01110100)
A v007 ( ( ( v008 ) - ( v003 ) ) + ( ( 00011100 ) - ( v002 ) ) )
	85 Assign: r_vars[v007] = (64, 1111111111111111111111111111111101101001000100101011011001011000)
A v001 ( ( ( v002 ) - ( 10111011011001000110111110011111 ) ) - ( ! ( v002 ) ) )
	86 Assign: r_vars[v001] = (32, 01110010011101100010010010010010)
A v008 ( ( ( 11010000 ) + ( 1011101100100010 ) ) & ( ( 11011100 ) + ( 0000011011001100001001001000010100000111111100001000000010000110 ) ) )
	87 Assign: r_vars[v008] = (8, 01100010)
O v007
	 output count: 27 	1111111111111111111111111111111101101001000100101011011001011000
O v007
	 output count: 28 	1111111111111111111111111111111101101001000100101011011001011000
O v000
	 output count: 29 	11111111111111110111110101011111
A v001 ( ( ( 00011111010011100111010000010011 ) | ( 10001100 ) ) + ( ( v000 ) + ( v002 ) ) )
	91 Assign: r_vars[v001] = (32, 10110110001110110011110000010110)
O v002
	 output count: 30 	0000000000000000000000000000000010010110111011010100101000011000
A v002 ( ( ( 11111001001100101111110110101110 ) - ( v002 ) ) & ( ! ( v008 ) ) )
	93 Assign: r_vars[v002] = (64, 0000000000000000000000000000000000000000000000000000000010010100)
O v001
	 output count: 31 	10110110001110110011110000010110
O v004
	 output count: 32 	1111111111111111111111111111111101000000000000000001000001000100
A v006 ( ( ( 01001100000010010011101100111110 ) | ( 1110101111011000100101101111011101111110001111000111101000101000 ) ) - ( ( 0110101000110101101110110100101100011110011011101011111000000000 ) + ( 0011100000001000 ) ) )
	96 Assign: r_vars[v006] = (64, 1000000110100010110110111010110001011111110011101000010100110110)
A v003 ( ( ( v004 ) - ( v008 ) ) - ( ( v007 ) & ( v001 ) ) )
	97 Assign: r_vars[v003] = (64, 1111111111111111111111111111111100011111111011011101101111010010)
A v001 ( ( ! ( v000 ) ) - ( ( v001 ) - ( 0001001001010000 ) ) )
	98 Assign: r_vars[v001] = (32, 01001001110001010101100011011010)
A v009 ( ( ( v001 ) & ( v001 ) ) & ( ( 10010010 ) + ( v008 ) ) )
	99 Assign: r_vars[v009] = (32, 00000000000000000000000011010000)
A v005 ( ( ( 1101101001010000011110000100110000011100101101010111000011011001 ) & ( v006 ) ) - ( ! ( 01101011010101011111100110011001 ) ) )
	100 Assign: r_vars[v005] = (32, 10000111110110011111100110101010)
A v003 ( ( ! ( 0001011101011110101010110000111111011100111111110001100111101100 ) ) - ( ( v006 ) - ( 1111001111110000011101111000001000111001111110100010010111010101 ) ) )
	101 Assign: r_vars[v003] = (64, 0101101011101110111100001100010111111101001011001000011010110010)
O v009
	 output count: 33 	00000000000000000000000011010000
A v008 ( ! ( ( 00100001011001111100011010001101 ) & ( v001 ) ) )
	103 Assign: r_vars[v008] = (8, 01110111)
O v008
	 output count: 34 	01110111
A v004 ( ( ( 01001101000110001000111000110100 ) & ( 1110001010110010011001110110001101010001000100110010101101000111 ) ) - ( ( 1101101001100011 ) & ( v009 ) ) )
	105 Assign: r_vars[v004] = (64, 0000000000000000000000000000000001000001000100000000100111000100)
A v007 ( ( ( v001 ) & ( v004 ) ) - ( ( 11101110 ) + ( 11011101001010110100010100100011 ) ) )
	106 Assign: r_vars[v007] = (64, 1111111111111111111111111111111101100011110101001100001010101111)
O v007
	 output count: 35 	1111111111111111111111111111111101100011110101001100001010101111
A v003 ( ( ( v006 ) | ( v008 ) ) - ( ( v007 ) + ( v007 ) ) )
	108 Assign: r_vars[v003] = (64, 1000000110100010110110111010110110011000001001010000000000011001)
O v003
	 output count: 36 	1000000110100010110110111010110110011000001001010000000000011001
1,36c1,36
< 0000000000000000000000000000000000000000000000000000000000000000
< 0000000000000000000000000000000000000000000000000000000000000000
< 0000000000000000000000000000000000000000000000000000000000000000
< 0000000000000000000000000000000000000000000000000000000000000000
< 00000000
< 11100111
< 00000000000000000000000000000000
< 00000000000000000000000000000000
< 00000000000000000000000000000000
< 1001101001010101011100100011010011110000000100001000000100000000
< 0000000000000000000000000000000000000000000000000000000000000000
< 0000000000000000000000000000000011101000011001011100111110111000
< 1111010111000001100011010110001000000001010011010100011110010101
< 11111111111111111111111111111111
< 01000011011110001101010011111010
< 01010100111001010011111001101100
< 11100111
< 0001000010101111100100000111010111110100101100000011010111000000
< 0000000000000000000000000000000010001011000110101100000110010000
< 0000000000000000000000000000000010101111011111101110010110111011
< 0000000000000000000000000000000000000000000000000000000001011010
< 11111111111111111111111111111111
< 1111111111111111111111111111111101000000000000000001000001000100
< 01100110
< 0000000000000000000000000000000010001011000110101100000110010000
< 0000000000000000000000000000000010010110111011010100101000011000
< 1111111111111111111111111111111101101001000100101011011001011000
< 1111111111111111111111111111111101101001000100101011011001011000
< 11111111111111110111110101011111
< 0000000000000000000000000000000010010110111011010100101000011000
< 10110110001110110011110000010110
< 1111111111111111111111111111111101000000000000000001000001000100
< 00000000000000000000000011010000
< 01110111
< 1111111111111111111111111111111101100011110101001100001010101111
< 1000000110100010110110111010110110011000001001010000000000011001
---
> 	0000000000000000000000000000000000000000000000000000000000000000
> 	0000000000000000000000000000000000000000000000000000000000000000
> 	0000000000000000000000000000000000000000000000000000000000000000
> 	0000000000000000000000000000000000000000000000000000000000000000
> 	00000000
> 	11100111
> 	00000000000000000000000000000000
> 	00000000000000000000000000000000
> 	00000000000000000000000000000000
> 	1001101001010101011100100011010011110000000100001000000100000000
> 	0000000000000000000000000000000000000000000000000000000000000000
> 	0000000000000000000000000000000011101000011001011100111110111000
> 	1111010111000001100011010110001000000001010011010100011110010101
> 	11111111111111111111111111111111
> 	01000011011110001101010011111010
> 	01010100111001010011111001101100
> 	11100111
> 	0001000010101111100100000111010111110100101100000011010111000000
> 	0000000000000000000000000000000010001011000110101100000110010000
> 	0000000000000000000000000000000010101111011111101110010110111011
> 	0000000000000000000000000000000000000000000000000000000001011010
> 	11111111111111111111111111111111
> 	1111111111111111111111111111111101000000000000000001000001000100
> 	01100110
> 	0000000000000000000000000000000010001011000110101100000110010000
> 	0000000000000000000000000000000010010110111011010100101000011000
> 	1111111111111111111111111111111101101001000100101011011001011000
> 	1111111111111111111111111111111101101001000100101011011001011000
> 	11111111111111110111110101011111
> 	0000000000000000000000000000000010010110111011010100101000011000
> 	10110110001110110011110000010110
> 	1111111111111111111111111111111101000000000000000001000001000100
> 	00000000000000000000000011010000
> 	01110111
> 	1111111111111111111111111111111101100011110101001100001010101111
> 	1000000110100010110110111010110110011000001001010000000000011001
